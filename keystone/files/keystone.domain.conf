{% from "keystone/map.jinja" import server with context %}
{%- for name, dm in server.domain.iteritems() %}
{%- if name == domain_name %}
{%- set domain = dm %}
{%- endif %}
{%- endfor %}

{%- if domain.get("backend", "sql") == "ldap" %}
[ldap]
url = {{ domain.ldap.url }}
user = uid={{ domain.ldap.get("uid", "keystone") }},cn=users,cn=accounts,{{ domain.ldap.suffix }}
password = {{ domain.ldap.password }}
suffix = {{ domain.ldap.suffix }}

# User mapping
user_tree_dn = cn=users,cn=accounts,{{ domain.ldap.suffix }}
user_objectclass = person
user_id_attribute = uid
user_name_attribute = uid
user_mail_attribute = mail
user_allow_create = false
user_allow_update = false
user_allow_delete = false
user_enabled_attribute = nsAccountLock
user_enabled_default = False
user_enabled_invert = true

# Group mapping
group_tree_dn = cn=groups,cn=accounts,{{ domain.ldap.suffix }}
group_objectclass = groupOfNames
group_id_attribute = cn
group_name_attribute = cn
group_member_attribute = member
group_desc_attribute = description
group_allow_create = false
group_allow_update = false
group_allow_delete = false

{%- if ldap.get("tls", {}).get("enabled", true) %}
use_tls = true
{%- if ldap.tls.cacertfile %}
tls_cacertfile = /etc/ipa/ca.crt
{%- endif %}
{%- endif %}
{%- endif %}

[identity]
{%- if domain.get("backend", "sql") == "ldap" %}
driver = keystone.identity.backends.ldap.Identity
{%- else %}
driver = keystone.identity.backends.sql.Identity
{%- endif %}

[assignment]
{%- if domain.get("assignment", {}).get("backend", "sql") == "ldap" %}
driver = keystone.assignment.backends.ldap.Assignment
{%- else %}
driver = keystone.assignment.backends.sql.Assignment
{%- endif %}
